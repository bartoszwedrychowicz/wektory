/*

link:https://aniastarmach.pl/przepis/spaghetti-bolognese/

SkÅ‚adniki

    300 ml passaty pomidorowej
    300 g mielonej woÅ‚owiny
    300 g makaronu spaghetti
    30 g tartego parmezanu
    1 Å‚yÅ¼ka koncentratu pomidorowego
    1 zÄ…bek czosnku
    1 maÅ‚a cebula
    0.5 Å‚yÅ¼eczki suszonego tymianku
    0.5 Å‚yÅ¼eczki suszonego oregano
    oliwa z oliwek
    sÃ³l, pieprz
    Å›wieÅ¼a bazylia

Jak przygotowaÄ‡?

    Na gÅ‚Ä™bokiej patelni rozgrzej okoÅ‚o 2 Å‚yÅ¼ki oliwy z oliwek.

    Na rozgrzanÄ… patelniÄ™ wrzuÄ‡ czosnek i cebulÄ™, a po chwili dodaj miÄ™so, rozdrabniaj je np. widelcem, tak aby nie powstaÅ‚y grube miÄ™sne grudki.

    Do miÄ™sa dodaj zioÅ‚a oraz koncentrat. CaÅ‚oÅ›Ä‡ podgrzewaj przez chwilÄ™, dodaj passatÄ™ (przecier pomidorowy), gotuj na maÅ‚ym ogniu okoÅ‚o 30 minut.

    Makaron ugotuj al dente, podawaj go z sosem, serem, i bazyliÄ….
*/

const confirmBtn = document.getElementById("confirm");
const startGameBtn = document.getElementById("start");
const moves = document.getElementById("moves");
const game = document.getElementById("game");
const points = document.getElementById("points");
const message = document.getElementById("message");
const timer = document.getElementById("timer");
const panel = document.getElementsByClassName("panel")[0];
const startPos = document.getElementById(playerStartPos);
const playerStartPos = 45;

const coinCount = 7;
let direction = document.getElementById("direction").value;
let number = document.getElementById("number");
let numberValue = parseInt(number.value);

// blokada wpisywania liczb ujemnych i 0
number.oninput = function () {
  if (this.value <= 0) {
    this.value = "";
  }
};

//Mechanika odczytywania polecen dla wektorusia
const changeGameState = (state) => {
  if (state == 1) {
    startGameBtn.disabled = true;

    //Generowanie CoinÃ³w
    const pointsCount = Math.floor(Math.random() * coinCount) + 1;
    for (let i = 0; i < pointsCount; i++) {
      const imageEl = document.createElement("img");
      imageEl.src = "Assets/Textures/coin.png";
      imageEl.classList.add("coin");
      let random = Math.floor(Math.random() * 100) + 1;
      document.getElementById(random).appendChild(imageEl);
    }

    //Generowanie Wektorusia
    const WektorusEl = document.createElement("img");
    WektorusEl.src = "Assets/Textures/wektorus.png";
    WektorusEl.setAttribute("id", "player");
    WektorusEl.classList.add("player");
    const killHimNow = new Event("killhim");
    WektorusEl.addEventListener("killhim", (e) => {
      let target = e.target;
      target.remove();
    });
    startPos.appendChild(WektorusEl);

    // Dodawanie poleceÅ„ i usuwanie ich z listy

    confirmBtn.disabled = false;
    confirmBtn.addEventListener("click", () => {
      if (numberValue <= 0 || numberValue == "" || isNaN(numberValue)) {
        numberValue = 1;
      }
      const ListEl = document.createElement("li");
      const hrEl = document.createElement("hr");
      ListEl.classList.add("moves-list-item");
      number.value = "";
      //Spagheti code dla Gabrysia
      switch (direction) {
        case "1":
          ListEl.innerText = numberValue + " ğŸ¡¡";
          break;
        case "2":
          ListEl.innerText = numberValue + " ğŸ¡¥";
          break;
        case "3":
          ListEl.innerText = numberValue + " ğŸ¡¢";
          break;
        case "4":
          ListEl.innerText = numberValue + " ğŸ¡¦";
          break;
        case "5":
          ListEl.innerText = numberValue + " ğŸ¡£";
          break;
        case "6":
          ListEl.innerText = numberValue + " ğŸ¡§";
          break;
        case "7":
          ListEl.innerText = numberValue + " ğŸ¡ ";
          break;
        case "8":
          ListEl.innerText = numberValue + " ğŸ¡¤";
          break;

        default:
          ListEl.innerText = numberValue + "ğŸ¡¡";
          break;
      }
      const player = document.getElementById("player")
      const rodzicWektorusia = player.parentElement
      const xWektorusia = rodzicWektorusia.dataset.row;
      const yWektorusia = rodzicWektorusia.dataset.column;
      console.log(yWektorusia);
      console.log(xWektorusia);

      //Usuwanie poleceÅ„
      ListEl.addEventListener("click", (e) => {
        let target = e.target;
        target.remove();
      });

      ListEl.append(hrEl);
      moves.appendChild(ListEl);
    });
    let count = 100;
    timer.innerText = count + " sekund pozostaÅ‚o";
    timer.classList.remove("hide");
    message.innerHTML = "";
    let playerPoints = 0;
    let counter = setInterval(() => {
      count = count - 1;
      if (count < 0) {
        clearInterval(counter);
        return;
      } else if (count == 0) {
        timer.classList.toggle("hide");
        confirmBtn.disabled = true;
        startGameBtn.disabled = false;
        WektorusEl.dispatchEvent(killHimNow);
        const coins = document.querySelectorAll(".coin");
        for (i of coins) {
          i.remove();
        }
        const movesList = document.querySelectorAll(".moves-list-item");
        for(m of movesList){
          m.remove();
        }
        message.innerHTML =
          "Koniec Gry <br> UzyskaÅ‚eÅ› " + playerPoints + " punktÃ³w";
      }
      timer.innerText = count + " sekund pozostaÅ‚o";
    }, 1000); // 1000 millisekund = 1 sekunda
  }
};
